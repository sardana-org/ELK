# The # character at the beginning of a line indicates a comment. Use
# comments to describe your configuration.
input {
	beats {
        host => "84.89.246.116"
        port => 9600
    }
}
# The filter part of this file is commented out to indicate that it is
# optional.
filter {
	if "normal" in [log][file][path] {
		grok {
			patterns_dir => ["./etc/logstash/patterns/"]
			match => { "message" => "%{THREAD:thread}\s+%{LOGLEVEL:loglevel}" }
			add_tag => ["Enteredfirstpipeline"] 
			tag_on_failure => ["_grokparsefailure"]
		}
		if [loglevel] == "ERROR"{
			if "Dummy" in [thread]{
				grok {
					patterns_dir => ["./etc/logstash/patterns/"]
	        		match => { "message" => "%{THREAD}\s+%{LOGLEVEL}\s.+%{DATESTAMP}+\s?%{DEVICE:device}\W{,7}%{ERRORTYPE:errortype}%{ERRORMESSAGE:errormessage}" }
	        		add_tag => ["Dummy"] 
	        		tag_on_failure => ["_grokparsefailure"]
	    		}
			}
			else if "SardanaTP" in [thread] {
				grok {
					patterns_dir => ["./etc/logstash/patterns/"]
	        		match => { "message" => "%{THREAD}\s+%{LOGLEVEL}\s.+%{DATESTAMP}+\s?%{DEVICESARD:device}\W{,7}%{ERRORTYPE:errortype}\n+*%{ERRORMESSAGE:errormessage}" }
	        		tag_on_failure => ["_grokparsefailure"]
	        		add_tag => ["Sardana"] 
	    		}
			}
			else if [thread] == "MainThread" {
				grok {
					patterns_dir => ["./etc/logstash/patterns/"]
	        		match => { "message" => "%{THREAD}\s+%{LOGLEVEL}\s.+%{DATESTAMP}+\s?%{DEVICEMAIN:device}\W{,7}%{ERRORTYPE:errortype}\n+*%{ERRORMESSAGE:errormessage}" }
	        		add_tag => ["mainthread"] 
	        		tag_on_failure => ["_grokparsefailure"]
	    		}
			}
			else {
				grok {
					patterns_dir => ["./etc/logstash/patterns/"]
	        		match => { "message" => "%{THREAD}\s+%{LOGLEVEL}\s.+%{DATESTAMP}+\s?%{DEVICE:device}%{GREEDYDATA:errortype}\n+*%{ERRORMESSAGE:errormessage}" }
	        		add_tag => ["filtnotworking"] 
	        		tag_on_failure => ["_grokparsefailure"]
	    		}
			}
		}
		else if [loglevel] == "DEBUG"{
			grok {
			patterns_dir => ["./etc/logstash/patterns/"]
	        match => { "message" => "%{THREAD}\s+%{LOGLEVEL}\s.+%{DATESTAMP}+\s?%{DEVICEDEBUG:device}"}
	        tag_on_failure => ["_DEBgrokparsefailure"]
	        }
		}
		else {
			grok {
			patterns_dir => ["./etc/logstash/patterns/"]
	        match => { "message" => "%{THREAD}\s+%{LOGLEVEL}\s.+%{DATESTAMP}+\s?%{DEVICEDEBUG:device}"}
	        tag_on_failure => ["_INFgrokparsefailure"]
	        }
		}
		if "_grokparsefailure" in [tags]{
	        grok {
	        	patterns_dir => ["./etc/logstash/patterns/"]
	        	match => { "message" => "%{THREAD}\s+%{LOGLEVEL}\s.+%{DATESTAMP}%{ERRORTYPEDUMMYESP:errortype}+%{GREEDYDATA:device}" }
	        	add_tag => ["DummyEspecial"]
	        }
	    }
	    else if "_DEBgrokparsefailure" in [tags]{
	    	grok {
	        	patterns_dir => ["./etc/logstash/patterns/"]
	        	match => { "message" => "%{THREAD}\s+%{LOGLEVEL}\s.+%{DATESTAMP}"}
	        	add_tag => ["Nodevice"]
	        }
	    }
	    else if "_INFgrokparsefailure" in [tags]{
	    	grok {
	        	patterns_dir => ["./etc/logstash/patterns/"]
	        	match => { "message" => "%{THREAD}\s+%{LOGLEVEL}\s.+%{DATESTAMP}"}
	        	add_tag => ["Nodevice"]
	        }
	    }
	    grok {
	    		patterns_dir => ["./etc/logstash/patterns/"]
	    		match => { "message" => "%{TIMESTAMP_ISO8601:logdate}"}
	        	# match => { "message" => "%{LOGDATE:logdate}"}
	        	# match => { "message" => "%{DATESTAMP:logdate}"}
	        	tag_on_failure => ["grokdateparsefailure"]
	        }
	    date {
	    	match => [ "logdate", "ISO8601", "YYYY-MM-dd HH:mm:ss" ]
			# match => { "logdate" => "yyyy-MM-dd HH:mm:ss,SSS" }
			target => "logdate"
      		locale => "en"
			timezone => "Europe/Madrid"
			add_tag => ["dateparsesucces"]
			tag_on_failure => ["dateparsefailure"]
		}
		if "Started at" in [message]{
			grok{
				match => { "message" => "%{DATA}"}
				add_tag => [Inicio]
			}
		}
	}
}
output {
	if "macro" in [log][file][path] {
		pipeline { send_to => macrologs }
	}
	else if "taurus" in [log][file][path]{
        pipeline { send_to => tauruslogs }
    }
    else{
        elasticsearch {
        	hosts => [ "84.89.246.116:9200" ]
        }
	}
}